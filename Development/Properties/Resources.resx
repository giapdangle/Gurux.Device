<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ended" xml:space="preserve">
    <value> ended.</value>
  </data>
  <data name="TransactionIsAlreadyInProgress" xml:space="preserve">
    <value>Transaction is already in progress.</value>
  </data>
  <data name="Started" xml:space="preserve">
    <value> started.</value>
  </data>
  <data name="ItSIndexAlreadyExistsIn" xml:space="preserve">
    <value>. It's Index already exists in </value>
  </data>
  <data name="FailedToExecute" xml:space="preserve">
    <value>Failed to execute </value>
  </data>
  <data name="ItAlreadyExists" xml:space="preserve">
    <value>. It already exists.</value>
  </data>
  <data name="Wait0MsBeforeNextPacketIsSend" xml:space="preserve">
    <value>Wait {0} ms. before next packet is send.</value>
  </data>
  <data name="ReadFailed" xml:space="preserve">
    <value>{0} Read failed.
{1}</value>
  </data>
  <data name="SendFailed" xml:space="preserve">
    <value>Send failed.</value>
  </data>
  <data name="TimeoutOccurred" xml:space="preserve">
    <value>Timeout occurred.</value>
  </data>
  <data name="InvalidAcknowledgeMessage" xml:space="preserve">
    <value>Invalid Acknowledge message: </value>
  </data>
  <data name="ParentlessDeviceMonitoringIsNotAllowed" xml:space="preserve">
    <value>Parentless device monitoring is not allowed.</value>
  </data>
  <data name="UpdateIntervalIsNotSet" xml:space="preserve">
    <value>Update interval is not set.</value>
  </data>
  <data name="InvalidMediaState" xml:space="preserve">
    <value>Invalid media state.</value>
  </data>
  <data name="FailedToLoadAddIn01" xml:space="preserve">
    <value>Failed to load Add-In '{0}'
{1}</value>
  </data>
  <data name="InvalidProtocolAddIn" xml:space="preserve">
    <value>Invalid protocol AddIn </value>
  </data>
  <data name="ParentlessScheduleCanTBeActivated" xml:space="preserve">
    <value>Parentless schedule can't be activated.</value>
  </data>
  <data name="FailedToLoadFile" xml:space="preserve">
    <value>Failed to Load file: </value>
  </data>
  <data name="InvalidValueForceedPresetValueNotFound" xml:space="preserve">
    <value>Invalid value. Forceed preset value not found.</value>
  </data>
  <data name="InvalidStartType" xml:space="preserve">
    <value>Invalid start type.</value>
  </data>
  <data name="EntryReadTypeIsInvalid" xml:space="preserve">
    <value>Entry read type is invalid.</value>
  </data>
  <data name="InvalidParent" xml:space="preserve">
    <value>Invalid parent.</value>
  </data>
  <data name="TableNameIsUnknown" xml:space="preserve">
    <value>Table name is unknown.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TableNameCanTBeEmpty" xml:space="preserve">
    <value>Table name can't be empty.</value>
  </data>
  <data name="VersionComparisationFailed" xml:space="preserve">
    <value>Version comparisation failed:
</value>
  </data>
  <data name="UnknownDeviceProfile" xml:space="preserve">
    <value>Unknown device profile</value>
  </data>
  <data name="DeviceTypeIsNotPreset" xml:space="preserve">
    <value>Device type is not preset.</value>
  </data>
  <data name="NoProtocolsFound" xml:space="preserve">
    <value>No Protocols Found.</value>
  </data>
  <data name="InvalidPacketHandlerType" xml:space="preserve">
    <value>Invalid PacketHandlerType.</value>
  </data>
  <data name="InvalidGXCommunicationAttribute" xml:space="preserve">
    <value>Invalid GXCommunicationAttribute.</value>
  </data>
  <data name="CategoryNameIsUnknown" xml:space="preserve">
    <value>Category name is unknown.</value>
  </data>
  <data name="UnknownDataInExportedFile0" xml:space="preserve">
    <value>Unknown data in exported file. {0}</value>
  </data>
  <data name="ScheduleEnded" xml:space="preserve">
    <value> Schedule ended.</value>
  </data>
  <data name="PropertyNameIsUnknown" xml:space="preserve">
    <value>Property Name is unknown.</value>
  </data>
  <data name="TheNameOfTheCategoryCanTBeEmpty" xml:space="preserve">
    <value>The name of the category can't be empty.</value>
  </data>
  <data name="FiledToValidateTable" xml:space="preserve">
    <value>Filed to validate table </value>
  </data>
  <data name="DeviceInstallationFailed" xml:space="preserve">
    <value>Device installation failed</value>
  </data>
  <data name="DoYouWantToReplaceExistingDevice" xml:space="preserve">
    <value>Do you want to replace existing device?</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="FindItemByIDFailedSearchIDCanTBeZero" xml:space="preserve">
    <value>FindItemByID failed. Search ID can't be Zero.</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="PropertyNameCanTBeEmpty" xml:space="preserve">
    <value>Property name can't be empty.</value>
  </data>
  <data name="ScheduleStarted" xml:space="preserve">
    <value> Schedule started.</value>
  </data>
  <data name="CouldNotFindUnpackedDeviceFile" xml:space="preserve">
    <value>Could not find unpacked device file</value>
  </data>
  <data name="DeviceFileDoesNotExistInThePacket" xml:space="preserve">
    <value>Device file does not exist in the packet.</value>
  </data>
  <data name="DataSource" xml:space="preserve">
    <value>Data Source</value>
  </data>
  <data name="DataIOSourceTargetIsUnknown" xml:space="preserve">
    <value>DataIOSource target is unknown.</value>
  </data>
  <data name="TextEditor" xml:space="preserve">
    <value>Text Editor</value>
  </data>
  <data name="UnknownTarget" xml:space="preserve">
    <value>Unknown target.</value>
  </data>
  <data name="InvalidValueForcedPresetValueNotFound" xml:space="preserve">
    <value>Invalid value. Forced preset value not found.</value>
  </data>
  <data name="Changed" xml:space="preserve">
    <value>Changed</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="AllMedias" xml:space="preserve">
    <value>All Medias</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>Connection failed.</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="InvalidGuruxDeviceTemplateID" xml:space="preserve">
    <value>Invalid Gurux Device template ID.</value>
  </data>
  <data name="MediaProperties" xml:space="preserve">
    <value>Media properties</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Search" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Search.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="NoDevicesPublishedTxt" xml:space="preserve">
    <value>No devices published.</value>
  </data>
  <data name="DoYouWantToRemoveTxt" xml:space="preserve">
    <value>Do you want to remove selected items?</value>
  </data>
</root>